1. Мотивация.
В текущей реализации "Александрит" при высокой загрузке системы, связанной с проеведением расчетов моделей, обработки запросов через API и т.п. операторы не могут быстро просмотреть дашборд с заказами и их статусами. Для операторов наиболее частым кейсом использования БД является чтение. В контексте системы данные изменяются не очень часто (данные отдельно взятого заказа). Аналогичная проблема может проявляться и  у пользователей, использующих публичную версию сайта. Внедрение кэширования позволит устранить данный недостаток.

2. Предлагаемое решение.
Предлагается к внедрению клиентское (HTTP) кэширование. Данный механизм кэширования позволит снизить загрузку на сервера системы. Данный тип кэширования позволит решить описанные выще проблемы с доступом к веб-интерфейсу отдельных компонентов системы. Реализация клиентского кэширования не требует разработки дополнительных компонентов. Серверное кэширование не рассматривается так как является более трудозатратным и вероятно менее эффективным в контексте данной системы.

Для поддержания актуализации данных необходимо своевременно их очищать в кэше. Для выбранной системы выбраны следующие стратегии инвалидации кэша:
	1. Инвалидация, основанная на запросах -  позволяет учесть изменения пользователей. Пользователи или менеджеры имеют возможность вносить измнения в заказ. В случае наличия изменений данные необходимо обновить. 
	2. Инвалидация на основе изменений - ползволяет учесть изменения заказа, сформированные другими пользователями (отразить изменения пользователя менеджеру и наоборот), а также изменения сформированные backend системы (окончание расчета стоимости модели).
	3. Инвалидация по ключу - позволяет учесть изменения отдельно взятого заказа в наборе заказов (партификация данных для обновления). Учитывая, что менеджер оперирует большим числом заказов, а обновление затрагивает лишь малую часть, данная стратегия подходит для системы. 
	
Диаграмма последовательности при операция запроса заказов и изменении заказа отображена здесь:
https://github.com/DmitrySavvin/architecture--alexandrite/blob/main/Task5/caching.drawio
